uiopen('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',1)
uiopen('C:\Users\cho64_000\Dropbox\Class materials\2012-2014\CSE 5526\Prev_year\Homework\ECE_779_HW_1.m',1)
edit rng.m
proj1
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',30,1)">30  </a>a = 1;
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',30,1)">30  </a>a = 1;
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',30,1)">30  </a>a = 1;
if system_dependent('IsDebugMode')==1, dbquit; end
edit unifrnd.m
proj1
{Undefined function 'unfrnd' for input arguments of type 'double'.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 25)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',25,0)">line 25</a>)
w = {[unifrnd(-1, 1, numInput, numHUnits)], [unfrnd(-1, 1, numHUnits, 1)]};
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',30,1)">30  </a>a = 1;
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',32,1)">32  </a>a = 1;
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
{Undefined function or variable "trn_x".

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 14)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',14,0)">line 14</a>)
trn_d = mod(sum(trn_x ~= 0, 2), 2);
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',40,1)">40  </a>end
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',45,1)">45  </a>end
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>end
size(y, 2)

ans =

     2

if system_dependent('IsDebugMode')==1, dbquit; end
size(y, 2)
{Undefined function or variable 'y'.
} 
proj1

ans =

    0.6275

{Index exceeds matrix dimensions.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 45)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',45,0)">line 45</a>)
            w{j}(1, 4)
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',45,1)">45  </a>            w{j}(1, 4)
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',45,1)">45  </a>            w{j, 1}(1, 3)
if system_dependent('IsDebugMode')==1, dbcont; end

ans =

   -0.5592

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',43,1)">43  </a>    for i=1:size(trn_x, 1)
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',43,1)">43  </a>    for i=1:size(trn_x, 1)
if system_dependent('IsDebugMode')==1, dbcont; end
trn_x(i,:)

ans =

     0     1     1     1

if system_dependent('IsDebugMode')==1, dbquit; end
trn_x(i,:)
{Undefined variable trn_x.
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',43,1)">43  </a>    for i=1:size(trn_x, 1)
if system_dependent('IsDebugMode')==1, dbcont; end
{Error using <a href="matlab:helpUtils.errorDocCallback('times')" style="font-weight:bold"> .* </a>
Matrix dimensions must agree.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 45)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',45,0)">line 45</a>)
            v{j,1} = trn_x(i,:) .* w{1,j};
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',45,1)">45  </a>            v{j,1} = trn_x(i,:) .* w{1,j};
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1} = trn_x(i,:) .* w{1,j}(1,:);
v{j,1}

ans =

     0
     0
     0
     0

if system_dependent('IsDebugMode')==1, dbquit; end
v{j,1}
{Undefined variable "v" or class "v".
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(i,:) .* w{1,j}(1,:);
v{j,1}(1)

ans =

     0

trn_x(i,:)

ans =

  Columns 1 through 12

     0     0     1     1     1     1     1     1     0     0     0     1

  Columns 13 through 16

     0     1     0     0

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(:, 1) .* w{1,j}(1,:);
trn_x(:, 1) 

ans =

     0
     0
     1
     1
     1
     1
     1
     1
     0
     0
     0
     1
     0
     1
     0
     0

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(:, 1) .* w{1,j}(1,:);
trn_x(:, 1)

ans =

     0
     1
     1
     1

proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(:,1) .* w{1,j}(1,:);
w{1,j}(1,:)

ans =

   -0.5831   -0.6577   -0.5592    0.6275

dbcont
{Error using <a href="matlab:helpUtils.errorDocCallback('times')" style="font-weight:bold"> .* </a>
Matrix dimensions must agree.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 47)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,0)">line 47</a>)
            v{j,1}(1) = trn_x(:,1) .* w{1,j}(1,:);
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = sum(trn_x(:,1) .* w{1,j}(1,:));
if system_dependent('IsDebugMode')==1, dbcont; end
{Error using <a href="matlab:helpUtils.errorDocCallback('times')" style="font-weight:bold"> .* </a>
Matrix dimensions must agree.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 47)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,0)">line 47</a>)
            v{j,1}(1) = sum(trn_x(:,1) .* w{1,j}(1,:));
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = sum(trn_x(:,1) .* w{1,j}(1,:));
trn_x(:,1)

ans =

     0
     1
     1
     1

w{1,j}(1,:)

ans =

   -0.5831   -0.6577   -0.5592    0.6275

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(:,1) * w{1,j}(1,:);
if system_dependent('IsDebugMode')==1, dbcont; end
{In an assignment  A(:) = B, the number of elements in A and B must be the
same.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 47)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,0)">line 47</a>)
            v{j,1}(1) = trn_x(:,1) * w{1,j}(1,:);
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(:,1) * w{1,j}(1,:);
trn_x(:,1) * w{1,j}(1,:)

ans =

         0         0         0         0
   -0.5831   -0.6577   -0.5592    0.6275
   -0.5831   -0.6577   -0.5592    0.6275
   -0.5831   -0.6577   -0.5592    0.6275

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(:,1) * w{1,j};
trn_x(:,1) * w{1,j}
{Error using <a href="matlab:helpUtils.errorDocCallback('mtimes')" style="font-weight:bold"> * </a>
Inner matrix dimensions must agree.
} 
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(:,1) .* w{1,j}(1,:);
trn_x(:,1) .* w{1,j}(1,:)
{Error using <a href="matlab:helpUtils.errorDocCallback('times')" style="font-weight:bold"> .* </a>
Matrix dimensions must agree.
} 
trn_x(:,1)

ans =

     0
     1
     1
     1

w{1,j}(1,:)

ans =

   -0.5831   -0.6577   -0.5592    0.6275

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(:,1) .* w{1,j}(1,:);
trn_x(:,1) .* w{1,j}(1,:)
{Error using <a href="matlab:helpUtils.errorDocCallback('times')" style="font-weight:bold"> .* </a>
Matrix dimensions must agree.
} 
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(:,1) .* w{1,j}(1,:);
trn_x(:,1)

ans =

     0
     0
     1
     1
     1
     1
     1
     1
     0
     0
     0
     1
     0
     1
     0
     0

if system_dependent('IsDebugMode')==1, dbquit; end
trn_x(:,1)
{Undefined variable trn_x.
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(:,1) .* w{1,j}(1,:);
trn_x(:,1)

ans =

     0
     1
     1
     1

if system_dependent('IsDebugMode')==1, dbquit; end
trn_x(:,1)
{Undefined variable trn_x.
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(1,:) .* w{1,j}(1,:);
trn_x(:,1)

ans =

     0
     0
     1
     1
     1
     1
     1
     1
     0
     0
     0
     1
     0
     1
     0
     0

trn_x(:,1)

ans =

     0
     0
     1
     1
     1
     1
     1
     1
     0
     0
     0
     1
     0
     1
     0
     0

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = trn_x(1,:) .* w{1,j}(1,:);
trn_x(:,1)

ans =

     0
     0
     1
     1
     1
     1
     1
     1
     0
     0
     0
     1
     0
     1
     0
     0

trn_x(1,:)

ans =

     0     1     1     1

trn_x(1,:) .* w{1,j}(1,:)

ans =

         0   -0.6577   -0.5592    0.6275

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>            v{j,1}(1) = sum(trn_x(1,:) .* w{1,j}(1,:));
v{j,1}(1)

ans =

     0

if system_dependent('IsDebugMode')==1, dbcont; end
trn_x(1,:)

ans =

     0     1     1     1

w{1,j}(1,:)

ans =

    0.5441

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>    end
inputs

inputs =

     0     1     1     1
     0     0     1     0
     1     1     0     0
     1     0     0     0
     1     1     1     1
     1     1     0     1
     1     0     1     1
     1     1     1     0
     0     0     0     0
     0     1     0     1
     0     0     0     1
     1     0     1     0
     0     1     1     0
     1     0     0     1
     0     0     1     1
     0     1     0     0
     0     1     1     1
     0     0     1     0
     1     1     0     0
     1     0     0     0
     1     1     1     1
     1     1     0     1
     1     0     1     1
     1     1     1     0
     0     0     0     0
     0     1     0     1
     0     0     0     1
     1     0     1     0
     0     1     1     0
     1     0     0     1
     0     0     1     1
     0     1     0     0
     0     1     1     1
     0     0     1     0
     1     1     0     0
     1     0     0     0
     1     1     1     1
     1     1     0     1
     1     0     1     1
     1     1     1     0
     0     0     0     0
     0     1     0     1
     0     0     0     1
     1     0     1     0
     0     1     1     0
     1     0     0     1
     0     0     1     1
     0     1     0     0
     0     1     1     1
     0     0     1     0
     1     1     0     0
     1     0     0     0
     1     1     1     1
     1     1     0     1
     1     0     1     1
     1     1     1     0
     0     0     0     0
     0     1     0     1
     0     0     0     1
     1     0     1     0
     0     1     1     0
     1     0     0     1
     0     0     1     1
     0     1     0     0

if system_dependent('IsDebugMode')==1, dbquit; end
inputs
{Undefined function or variable 'inputs'.
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',47,1)">47  </a>    end
inputs

inputs =

     0     1     1     1
     0     1     1     1
     0     1     1     1
     0     1     1     1

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
{Error using <a href="matlab:helpUtils.errorDocCallback('times')" style="font-weight:bold"> .* </a>
Matrix dimensions must agree.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 46)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',46,0)">line 46</a>)
            vs = inputs .* y{1,j};
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',46,1)">46  </a>            vs = inputs .* y{1,j};
inputs

inputs =

     0     1     1     1
     0     1     1     1
     0     1     1     1
     0     1     1     1

y{1,j}

ans =

     0
     0
     0
     0

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',46,1)">46  </a>            vs = inputs .* w{1,j};
if system_dependent('IsDebugMode')==1, dbcont; end
inputs

inputs =

     0     1     1     1
     0     1     1     1
     0     1     1     1
     0     1     1     1

w{1,j}

ans =

    0.5441
    0.9157
    0.4039
   -0.4048

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',46,1)">46  </a>            vs = inputs .* w{1,j};
w{1,j}

ans =

   -0.5831   -0.6577   -0.5592    0.6275
   -0.0366   -0.3223    0.6239    0.4902
   -0.1589   -0.4589   -0.9789   -0.6218
    0.7184    0.3821    0.1224   -0.9877

inputs .* w{1,j}

ans =

         0   -0.6577   -0.5592    0.6275
         0   -0.3223    0.6239    0.4902
         0   -0.4589   -0.9789   -0.6218
         0    0.3821    0.1224   -0.9877

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',46,1)">46  </a>            v{1,j} = sum(inputs .* w{1,j}, 2);
if system_dependent('IsDebugMode')==1, dbcont; end
inputs .* w{1,j}
{Error using <a href="matlab:helpUtils.errorDocCallback('times')" style="font-weight:bold"> .* </a>
Matrix dimensions must agree.
} 
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',46,1)">46  </a>            v{1,j} = sum(inputs .* w{1,j}, 2);
inputs .* w{1,j}

ans =

         0   -0.6577   -0.5592    0.6275
         0   -0.3223    0.6239    0.4902
         0   -0.4589   -0.9789   -0.6218
         0    0.3821    0.1224   -0.9877

sum(inputs .* w{1,j}, 2)

ans =

   -0.5894
    0.7918
   -2.0597
   -0.4832

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
{Error using <a href="matlab:helpUtils.errorDocCallback('times')" style="font-weight:bold"> .* </a>
Matrix dimensions must agree.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 49)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',49,0)">line 49</a>)
            v{1,j} = sum(inputs .* w{1,j}, 2);
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',49,1)">49  </a>            v{1,j} = sum(inputs .* w{1,j}, 2);
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
w{1,j}

ans =

    0.5441
    0.9157
    0.4039
   -0.4048

inputs

inputs =

     0     1     1     1

dbcont
{Error using <a href="matlab:helpUtils.errorDocCallback('times')" style="font-weight:bold"> .* </a>
Matrix dimensions must agree.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 49)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',49,0)">line 49</a>)
            v{1,j} = sum(inputs .* w{1,j}, 2);
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',49,1)">49  </a>            v{1,j} = sum(inputs .* w{1,j}, 2);
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',50,1)">50  </a>        end
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',49,1)">49  </a>            v{1,j} = sum(inputs .* w{1,j}, 2);
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',55,1)">55  </a>        end
sum(inputs .* w{1,j}, 2)

ans =

   -0.5894
    0.7918
   -2.0597
   -0.4832

b{1,j}

ans =

    0.5360
    0.3764
   -0.2256
    0.2304

v{1,j}

ans =

   -0.0534
    1.1683
   -2.2853
   -0.2528

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',56,1)">56  </a>        end
v{1,j}

ans =

   -0.0534
    1.1683
   -2.2853
   -0.2528

-1.*v{1,j}

ans =

    0.0534
   -1.1683
    2.2853
    0.2528

exp(-1.*v{1,j})

ans =

    1.0549
    0.3109
    9.8285
    1.2876

(1+exp(-1.*v{1,j})
 (1+exp(-1.*v{1,j})
                   |
{Error: Expression or statement is incorrect--possibly unbalanced (, {, or
[.
} 
(1+exp(-1.*v{1,j}))

ans =

    2.0549
    1.3109
   10.8285
    2.2876

1./(1+exp(-1.*v{1,j}))

ans =

    0.4866
    0.7628
    0.0923
    0.4371

y{1,j}

ans =

    0.4866
    0.7628
    0.0923
    0.4371

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',54,1)">54  </a>        end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',54,1)">54  </a>        end
if system_dependent('IsDebugMode')==1, dbquit; end
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',54,1)">54  </a>        end
y{1,j}

ans =

    0.4866
    0.7628
    0.0923
    0.4371

dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',51,1)">51  </a>            end
inputs

inputs = 

    [4x1 double]    [0]

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',54,1)">54  </a>        end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbstep in; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',54,1)">54  </a>        end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',54,1)">54  </a>        end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
y{1,1}

ans =

    0.4866
    0.7628
    0.0923
    0.4371

inputs

inputs =

    0.4866
    0.7628
    0.0923
    0.4371

dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',54,1)">54  </a>        end
v{1,j}

ans =

    0.1199
    0.5536
   -0.1076
   -0.3219

1./(1+exp(-1.*v{1,j}))

ans =

    0.5299
    0.6350
    0.4731
    0.4202

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',54,1)">54  </a>        end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
inputs

inputs =

    0.4866
    0.7628
    0.0923
    0.4371

w{1,j}

ans =

    0.5441
    0.9157
    0.4039
   -0.4048

inputs .* w{1,j}

ans =

    0.2648
    0.6985
    0.0373
   -0.1770

sum(inputs .* w{1,j}, 2)

ans =

    0.2648
    0.6985
    0.0373
   -0.1770

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',52,1)">52  </a>                v{1,j} = sum(inputs .* w{1,j}, 2) + b{1,j};
inputs

inputs =

     0     0     0     0
     1     1     1     1
     1     1     1     1
     1     1     1     1

inputs'

ans =

     0     1     1     1
     0     1     1     1
     0     1     1     1
     0     1     1     1

inputs

inputs =

     0     0     0     0
     1     1     1     1
     1     1     1     1
     1     1     1     1

if system_dependent('IsDebugMode')==1, dbquit; end
