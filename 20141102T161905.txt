uiopen('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m',1)
runSVM
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',3,1)">3   </a>a = 2;
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',3,1)">3   </a>a = 2;
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',3,1)">3   </a>a = 2;
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',3,1)">3   </a>a = 2;
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',3,1)">3   </a>a = 2;
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',3,1)">3   </a>a = 2;
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m',13,1)">13  </a>for i=1:length(C)
if system_dependent('IsDebugMode')==1, dbquit; end
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',4,1)">4   </a>if cross_val==1
if system_dependent('IsDebugMode')==1, dbquit; end
runSVM
{Undefined function 'peristent' for input
arguments of type 'char'.

Error in <a href="matlab:helpUtils.errorDocCallback('runSVM', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m', 11)" style="font-weight:bold">runSVM</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m',11,0)">line 11</a>)
peristent train_x train_d test_x test_d;
} 
runSVM
{Error: <a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m',11,12)">File: runSVM.m Line: 11 Column: 12
</a>The PERSISTENT declaration must precede any
use of the variable train_x.
} 
runSVM
{Error using <a href="matlab:helpUtils.errorDocCallback('persistent')" style="font-weight:bold">persistent</a>
A PERSISTENT declaration is only allowed in a
function.

Error in <a href="matlab:helpUtils.errorDocCallback('runSVM', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m', 9)" style="font-weight:bold">runSVM</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m',9,0)">line 9</a>)
persistent train_x train_d test_x test_d;
} 
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',4,1)">4   </a>if cross_val==1
edit train_x
runSVM
{Error: <a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m',13,12)">File: runSVM.m Line: 13 Column: 12
</a>The PERSISTENT declaration must precede any
use of the variable train_x.
} 
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',4,1)">4   </a>if cross_val==1
if system_dependent('IsDebugMode')==1, dbquit; end
runSVM
{Error using <a href="matlab:helpUtils.errorDocCallback('crossvalind', 'C:\Program Files\MATLAB\R2014a\toolbox\bioinfo\biolearning\crossvalind.m', 127)" style="font-weight:bold">crossvalind</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2014a\toolbox\bioinfo\biolearning\crossvalind.m',127,0)">line 127</a>)
To many output arguments for Kfold
cross-validation.

Error in <a href="matlab:helpUtils.errorDocCallback('trainSVM', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m', 5)" style="font-weight:bold">trainSVM</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',5,0)">line 5</a>)
    [tInd,eInd] = crossvalind('KFold',
    length(train_x),5);

Error in <a href="matlab:helpUtils.errorDocCallback('runSVM', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m', 17)" style="font-weight:bold">runSVM</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m',17,0)">line 17</a>)
        trainSVM(Cross_val(j), Kernel_func(1),
        train_x, train_d, C(i));
} 
runSVM
{Error using <a href="matlab:helpUtils.errorDocCallback('crossvalind', 'C:\Program Files\MATLAB\R2014a\toolbox\bioinfo\biolearning\crossvalind.m', 127)" style="font-weight:bold">crossvalind</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2014a\toolbox\bioinfo\biolearning\crossvalind.m',127,0)">line 127</a>)
To many output arguments for Kfold
cross-validation.

Error in <a href="matlab:helpUtils.errorDocCallback('trainSVM', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m', 7)" style="font-weight:bold">trainSVM</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',7,0)">line 7</a>)
    [tInd,eInd] = crossvalind('KFold',
    length(train_x),5);

Error in <a href="matlab:helpUtils.errorDocCallback('runSVM', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m', 17)" style="font-weight:bold">runSVM</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m',17,0)">line 17</a>)
        trainSVM(Cross_val(j),
        Kernel_func(1), train_x, train_d,
        C(i));
} 
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',8,1)">8   </a>end
find(rnadInds==1)
{Undefined function or variable 'rnadInds'.
} 
find(randInds==1)

ans =

           3
           9
          12
          36
          41
          42
          51
          54
          58
          62
          75
          78
          79
          85
          88
          92
          93
          99
         106
         112
         115
         126
         133
         134
         139
         146
         150
         151
         159
         164
         175
         176
         188
         189
         190
         192
         193
         199
         203
         205
         208
         215
         218
         222
         225
         226
         234
         235
         242
         243
         245
         247
         248
         250
         268
         278
         279
         285
         290
         294
         295
         300
         307
         311
         312
         322
         323
         327
         334
         341
         342
         344
         349
         357
         362
         369
         370
         372
         375
         384
         390
         392
         396
         399
         406
         408
         412
         417
         422
         423
         424
         426
         448
         449
         450
         454
         458
         471
         473
         474
         485
         486
         491
         496
         497
         504
         506
         508
         510
         516
         517
         528
         529
         531
         535
         538
         543
         550
         553
         557
         570
         576
         578
         581
         586
         591
         593
         597
         600
         608
         609
         612
         614
         617
         627
         629
         633
         636
         642
         651
         653
         654
         655
         657
         662
         664
         672
         683
         692
         696
         699
         707
         711
         712
         719
         725
         730
         740
         746
         754
         761
         771
         777
         786
         787
         805
         823
         826
         832
         834
         841
         844
         851
         857
         858
         868
         871
         886
         892
         914
         919
         920
         922
         924
         925
         933
         941
         949
         953
         959
         961
         963
         973
         974
         983
         990
         993
        1005
        1011
        1034
        1035
        1038
        1043
        1052
        1064
        1075
        1076
        1079
        1080
        1081
        1082
        1090
        1091
        1109
        1119
        1124
        1130
        1136
        1137
        1140
        1158
        1160
        1165
        1166
        1180
        1184
        1193
        1196
        1197
        1200
        1206
        1232
        1242
        1247
        1251
        1252
        1253
        1256
        1260
        1267
        1277
        1279
        1281
        1283
        1289
        1296
        1300
        1302
        1307
        1312
        1316
        1325
        1332
        1336
        1338
        1344
        1345
        1352
        1353
        1356
        1369
        1375
        1377
        1378
        1380
        1381
        1385
        1395
        1396
        1399
        1401
        1402
        1408
        1409
        1411
        1413
        1417
        1421
        1428
        1429
        1437
        1439
        1447
        1450
        1455
        1457
        1463
        1466
        1467
        1471
        1474
        1475
        1478
        1480
        1481
        1485
        1487
        1489
        1499
        1502
        1504
        1522
        1524
        1527
        1531
        1538
        1550
        1553
        1556
        1562
        1563
        1565
        1581
        1582
        1584
        1587
        1591
        1597
        1601
        1611
        1612
        1618
        1623
        1635
        1639
        1642
        1643
        1645
        1651
        1666
        1672
        1675
        1676
        1681
        1686
        1697
        1700
        1704
        1712
        1715
        1717
        1721
        1725
        1732
        1733
        1743
        1745
        1749
        1752
        1757
        1759
        1760
        1767
        1771
        1775
        1780
        1781
        1783
        1784
        1785
        1790
        1800
        1801
        1804
        1810
        1813
        1821
        1822
        1827
        1834
        1840
        1841
        1845
        1850
        1853
        1856
        1861
        1862
        1877
        1879
        1882
        1885
        1899
        1907
        1912
        1917
        1918
        1922
        1931
        1946
        1950
        1954
        1956
        1961
        1968
        1970
        1977
        1980
        1984
        1992

length(find(randInds==1))

ans =

   400

length(find(randInds==2))

ans =

   400

length(find(randInds==3))

ans =

   400

length(find(randInds==4))

ans =

   400

length(find(randInds==5))

ans =

   400

length(train_x))
 length(train_x))
                |
{Error: Unbalanced or unexpected parenthesis
or bracket.
} 
length(train_x)

ans =

        2000

if system_dependent('IsDebugMode')==1, dbquit; end
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',10,1)">10  </a>    end
find(randInds==1)

ans =

           4
          15
          24
          29
          40
          42
          48
          49
          54
          56
          60
          63
          64
          68
          73
          77
          92
          95
         109
         113
         116
         119
         132
         134
         140
         144
         145
         146
         147
         149
         152
         153
         154
         160
         163
         167
         169
         177
         187
         193
         196
         199
         207
         223
         224
         228
         229
         230
         242
         247
         250
         263
         265
         268
         274
         280
         296
         305
         309
         310
         318
         325
         329
         333
         335
         338
         342
         356
         361
         370
         373
         374
         376
         378
         386
         389
         398
         399
         400
         416
         420
         432
         438
         440
         444
         447
         449
         454
         458
         459
         467
         468
         475
         478
         488
         489
         493
         497
         508
         510
         517
         522
         523
         527
         528
         530
         531
         533
         535
         536
         537
         552
         556
         558
         559
         560
         562
         564
         576
         577
         580
         592
         596
         602
         605
         609
         616
         631
         635
         644
         645
         650
         656
         662
         669
         672
         675
         678
         681
         687
         691
         692
         697
         700
         703
         708
         715
         717
         719
         723
         727
         731
         740
         741
         752
         755
         762
         766
         773
         776
         781
         788
         790
         791
         792
         802
         804
         805
         820
         822
         827
         828
         834
         835
         836
         840
         842
         843
         848
         850
         851
         853
         857
         861
         866
         874
         887
         898
         902
         904
         905
         910
         914
         916
         924
         931
         935
         955
         957
         959
         963
         973
         982
        1002
        1007
        1008
        1009
        1014
        1015
        1022
        1027
        1030
        1031
        1032
        1036
        1043
        1051
        1052
        1056
        1059
        1072
        1079
        1080
        1081
        1092
        1094
        1097
        1098
        1110
        1115
        1125
        1126
        1127
        1135
        1148
        1156
        1159
        1163
        1173
        1174
        1179
        1181
        1187
        1189
        1193
        1196
        1202
        1204
        1209
        1210
        1218
        1219
        1225
        1232
        1234
        1236
        1237
        1241
        1264
        1271
        1277
        1284
        1286
        1291
        1297
        1299
        1302
        1304
        1315
        1316
        1330
        1336
        1337
        1341
        1342
        1344
        1347
        1349
        1350
        1353
        1354
        1371
        1383
        1393
        1394
        1395
        1399
        1402
        1404
        1407
        1417
        1422
        1425
        1430
        1442
        1445
        1448
        1449
        1461
        1462
        1463
        1467
        1469
        1479
        1496
        1497
        1499
        1502
        1503
        1506
        1512
        1527
        1530
        1531
        1540
        1549
        1557
        1558
        1560
        1568
        1574
        1577
        1580
        1592
        1598
        1601
        1616
        1626
        1629
        1640
        1645
        1646
        1655
        1665
        1671
        1682
        1687
        1697
        1698
        1701
        1703
        1717
        1718
        1720
        1721
        1723
        1724
        1729
        1731
        1740
        1751
        1755
        1764
        1767
        1770
        1773
        1775
        1776
        1789
        1790
        1794
        1796
        1799
        1800
        1807
        1808
        1809
        1814
        1815
        1817
        1822
        1825
        1830
        1840
        1843
        1844
        1845
        1856
        1865
        1870
        1871
        1873
        1890
        1902
        1906
        1913
        1924
        1943
        1951
        1953
        1955
        1957
        1958
        1961
        1967
        1978
        1988
        1991
        1994
        1995

if system_dependent('IsDebugMode')==1, dbquit; end
i = [1 4 2 4 3 4 1 2 3 4]';
j = [1 1 2 2 3 3 4 4 4 4]';
s = [4 -1 4 -1 4 -1 -1 -1 -1 4]';
CSP = sparse(i,j,s);
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',8,1)">8   </a>    for i=1:5
if system_dependent('IsDebugMode')==1, dbquit; end
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m',15,1)">15  </a>for i=1:length(C)
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbquit; end
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\runSVM.m',15,1)">15  </a>for i=1:length(C)
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbquit; end
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',10,1)">10  </a>    for i=1:5
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',12,1)">12  </a>    end
if system_dependent('IsDebugMode')==1, dbquit; end
runSVM
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProj3\trainSVM.m',15,1)">15  </a>a = 2;
if system_dependent('IsDebugMode')==1, dbquit; end
