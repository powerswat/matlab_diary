proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',72,1)">72  </a>                delta{1,numLayer-j+1} = y{1,numLayer-j+1}(1 - y{1,numLayer-j+1}) * sum(w{1,numLayer-j+1} * delta{1,numLayer-j+1});
w{1,numLayer-j+1}

ans =

   -0.5831   -0.6577   -0.5592    0.6275
   -0.0366   -0.3223    0.6239    0.4902
   -0.1589   -0.4589   -0.9789   -0.6218
    0.7184    0.3821    0.1224   -0.9877

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
{Undefined function 'mtimes' for input arguments of type 'cell'.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 76)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',76,0)">line 76</a>)
        w = w + (deltaW + alpha * prevW);
} 
proj1
{Undefined function 'mtimes' for input arguments of type 'cell'.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 76)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',76,0)">line 76</a>)
        w = w + (deltaW + alpha * prevW);
} 
proj1
{Undefined function 'mtimes' for input arguments of type 'cell'.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 76)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',76,0)">line 76</a>)
        w = w + (deltaW + alpha * prevW);
} 
proj1
{Operation terminated by user during <a href="matlab:helpUtils.errorDocCallback('daq.internal.StringEnum/enumFactory', 'C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\+daq\+internal\StringEnum.m', 90)" style="font-weight:bold">daq.internal.StringEnum/enumFactory</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\+daq\+internal\StringEnum.m',90,0)">line
90</a>)


In <a href="matlab:helpUtils.errorDocCallback('daq.BitOrder.setValue', 'C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\+daq\BitOrder.m', 14)" style="font-weight:bold">daq.BitOrder.setValue</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\+daq\BitOrder.m',14,0)">line 14</a>)
            obj = daq.internal.StringEnum.enumFactory(...

In <a href="matlab:helpUtils.errorDocCallback('daq.ConversionUtility/set.BitOrder', 'C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\+daq\ConversionUtility.m', 445)" style="font-weight:bold">daq.ConversionUtility/set.BitOrder</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\+daq\ConversionUtility.m',445,0)">line 445</a>)
                    obj.BitOrder = daq.BitOrder.setValue('MSBFirst');

In <a href="matlab:helpUtils.errorDocCallback('daq.ConversionUtility/handleNumBitsAndBitOrderInput', 'C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\+daq\ConversionUtility.m', 302)" style="font-weight:bold">daq.ConversionUtility/handleNumBitsAndBitOrderInput</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\+daq\ConversionUtility.m',302,0)">line 302</a>)
            obj.BitOrder = daq.BitOrder.MSBFirst;

In <a href="matlab:helpUtils.errorDocCallback('daq.ConversionUtility/decimalToBinaryVector', 'C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\+daq\ConversionUtility.m', 94)" style="font-weight:bold">daq.ConversionUtility/decimalToBinaryVector</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\+daq\ConversionUtility.m',94,0)">line 94</a>)
            obj.handleNumBitsAndBitOrderInput(obj.NumberOfBits,
            varargin{2:end});

In <a href="matlab:helpUtils.errorDocCallback('decimalToBinaryVector', 'C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\decimalToBinaryVector.m', 44)" style="font-weight:bold">decimalToBinaryVector</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2014a\toolbox\daq\daq\decimalToBinaryVector.m',44,0)">line 44</a>)
    out = conversionUtility.decimalToBinaryVector(decimalNumber,varargin{:});

In <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 46)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',46,0)">line 46</a>)
        trn_x(i,:) = decimalToBinaryVector(rndTrnData(i), numInput);
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=size(y, 2):1
if system_dependent('IsDebugMode')==1, dbcont; end
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=size(y, 2):1
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=size(y, 2):1
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=size(y, 2):1
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=size(y, 2):1
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=size(y, 2):1
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=size(y, 2):1
dbcont
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=size(y, 2):1
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=size(y, 2):1
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',53,1)">53  </a>    for i=1:size(trn_x, 1)
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
size(y, 2)

ans =

     2

dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',77,1)">77  </a>        prevW = w;
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',79,1)">79  </a>    end
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',55,1)">55  </a>        for j=1:size(y, 2)
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',56,1)">56  </a>            if j == 1
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',57,1)">57  </a>                inputs = repmat(trn_x(i, :), numUnits(j), 1)';
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',61,1)">61  </a>            v{1,j} = sum(inputs .* w{1,j}, 1)' + b{1,j};
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',62,1)">62  </a>            y{1,j} = 1./(1+exp(-1.*v{1,j}));
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',63,1)">63  </a>        end
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',56,1)">56  </a>            if j == 1
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',58,1)">58  </a>            else
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',59,1)">59  </a>                inputs = repmat(y{1,j-1}, numUnits(j), 1);
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',60,1)">60  </a>            end
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',61,1)">61  </a>            v{1,j} = sum(inputs .* w{1,j}, 1)' + b{1,j};
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',62,1)">62  </a>            y{1,j} = 1./(1+exp(-1.*v{1,j}));
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',63,1)">63  </a>        end
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=size(y, 2):1
dbstep
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',77,1)">77  </a>        prevW = w;
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',53,1)">53  </a>    for i=1:size(trn_x, 1)
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
{Error using <a href="matlab:helpUtils.errorDocCallback('mtimes')" style="font-weight:bold"> * </a>
Inner matrix dimensions must agree.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 72)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',72,0)">line 72</a>)
                delta{1,j} = y{1,j} * (1 - y{1,j}) * sum(w{1,j} *
                delta{1,j+1});
} 
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',53,1)">53  </a>    for i=1:size(trn_x, 1)
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',53,1)">53  </a>    for i=1:size(trn_x, 1)
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=1:size(y, 2)
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
y{1,numLayer-j+1}

ans =

    0.3979
    0.2260
    0.6223
    0.4212

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
y{1,numLayer-j+1}

ans =

    0.3979
    0.2260
    0.6223
    0.4212

w{1,numLayer-j+2}

ans =

    0.5441
    0.9157
    0.4039
   -0.4048

delta{1,numLayer-j+2}

ans =

    0.1440

w{1,numLayer-j+2} * delta{1,numLayer-j+2}

ans =

    0.0783
    0.1319
    0.0582
   -0.0583

sum(w{1,numLayer-j+2} * delta{1,numLayer-j+2})

ans =

    0.2101

if system_dependent('IsDebugMode')==1, dbcont; end
{Error using <a href="matlab:helpUtils.errorDocCallback('mtimes')" style="font-weight:bold"> * </a>
Inner matrix dimensions must agree.

Error in <a href="matlab:helpUtils.errorDocCallback('proj1', 'C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m', 72)" style="font-weight:bold">proj1</a> (<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',72,0)">line 72</a>)
                delta{1,numLayer-j+1} = y{1,numLayer-j+1} * (1 -
                y{1,numLayer-j+1}) * sum(w{1,numLayer-j+2} *
                delta{1,numLayer-j+2});
} 
proj1
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
y{1,numLayer-j+1}

ans =

    0.3979
    0.2260
    0.6223
    0.4212

if system_dependent('IsDebugMode')==1, dbquit; end
proj1
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
y{1,numLayer-j+1}

ans =

    0.3979
    0.2260
    0.6223
    0.4212

(1 - y{1,numLayer-j+1})

ans =

    0.6021
    0.7740
    0.3777
    0.5788

y{1,numLayer-j+1} .* (1 - y{1,numLayer-j+1})

ans =

    0.2396
    0.1749
    0.2350
    0.2438

if system_dependent('IsDebugMode')==1, dbquit; end
uiopen('C:\Users\cho64_000\Dropbox\Class materials\2012-2014\CSE 5526\Prev_year\Homework\ECE_779_HW_1.m',1)
proj1
<a href="matlab: opentoline('C:\Users\cho64_000\Dropbox\Neural Net\NNProject\proj1.m',66,1)">66  </a>        for j=1:size(y, 2)
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
delta{1,numLayer-j+1}

ans =

    0.0503
    0.0367
    0.0494
    0.0512

inputs{i, numLayer-j+1}
{Cell contents reference from a non-cell array object.
} 
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
delta{1,numLayer-j+1}

ans =

    0.0503
    0.0367
    0.0494
    0.0512

inputs{1,numLayer-j+1}
{Cell contents reference from a non-cell array object.
} 
if system_dependent('IsDebugMode')==1, dbquit; end
proj1
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
trn_x(i,:)

ans =

     0     1     0     0

